package ${package}.controller;

import java.util.List;
import java.util.Map;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.stereotype.Controller;

import ${package}.entity.${className}Entity;
import ${package}.service.${className}Service;
import ${package}.utils.PageUtils;
import ${package}.utils.Query;
import ${package}.utils.R;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;


/**
 * ${comments}
 * 
 */
@Controller
@RequestMapping("${pathName}")
@Api(value="/${pathName}",tags="${comments}")
public class ${className}Controller {
	@Autowired
	private ${className}Service ${classname}Service;
	
	/**
	 * 列表
	 */
	@ResponseBody
	@RequestMapping("/list")
	@RequiresPermissions("${pathName}:list")
	@ApiOperation(value="列表分页显示${comments}信息", notes="列表分页显示信息", httpMethod="POST", produces=MediaType.APPLICATION_JSON_VALUE,response=R.class)
	public R list(@ApiParam(value="请求参数(Map<String, Object>)", required=true) @RequestParam Map<String, Object> params){
		//查询列表数据
        Query query = new Query(params);

		List<${className}Entity> ${classname}List = ${classname}Service.queryList(query);
		int total = ${classname}Service.queryTotal(query);
		
		PageUtils pageUtil = new PageUtils(${classname}List, total, query.getLimit(), query.getPage());
		
		return R.ok().put("page", pageUtil);
	}
	
	
	/**
	 * 信息
	 */
	@ResponseBody
	@RequestMapping("/info/{${pk.attrname}}")
	@RequiresPermissions("${pathName}:info")
	@ApiOperation(value="查询${comments}详细信息", notes="根据id查询${comments}详细信息", httpMethod="GET", produces=MediaType.APPLICATION_JSON_VALUE,response=R.class)
	public R info(@ApiParam(value="请求参数${pk.attrname}", required=true) @PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
		${className}Entity ${classname} = ${classname}Service.queryObject(${pk.attrname});
		
		return R.ok().put("${classname}", ${classname});
	}
	
	/**
	 * 保存
	 */
	@ResponseBody
	@RequestMapping("/save")
	@RequiresPermissions("${pathName}:save")
	@ApiOperation(value="保存${comments}信息", notes="保存${comments}信息", httpMethod="POST", produces=MediaType.APPLICATION_JSON_VALUE,response=R.class)
	public R save(@ApiParam(value="请求参数${classname}Entity") @RequestBody ${className}Entity ${classname}){
		${classname}Service.save(${classname});
		
		return R.ok();
	}
	
	/**
	 * 修改
	 */
	@ResponseBody
	@RequestMapping("/update")
	@RequiresPermissions("${pathName}:update")
	@ApiOperation(value="修改${comments}信息", notes="修改${comments}信息", httpMethod="POST", produces=MediaType.APPLICATION_JSON_VALUE,response=R.class)
	public R update(@RequestBody ${className}Entity ${classname}){
		${classname}Service.update(${classname});
		
		return R.ok();
	}
	
	/**
	 * 删除
	 */
	@ResponseBody
	@RequestMapping("/delete")
	@RequiresPermissions("${pathName}:delete")
	@ApiOperation(value="删除${comments}", notes="删除${comments}", httpMethod="POST", produces=MediaType.APPLICATION_JSON_VALUE,response=R.class)
	public R delete(@ApiParam(value="请求参数id数组")@RequestBody ${pk.attrType}[] ${pk.attrname}s){
		${classname}Service.deleteBatch(${pk.attrname}s);
		
		return R.ok();
	}
	
}
